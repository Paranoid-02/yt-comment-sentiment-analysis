pipeline {
    agent any
    
    environment {
        AWS_DEFAULT_REGION = 'eu-north-1'
        GIT_USER_NAME = 'Paranoid-02'
        GIT_USER_EMAIL = 'akshay_02@outlook.com'
    }
    
    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }
        
        stage('Set Up Python') {
            steps {
                script {
                    // Equivalent to actions/setup-python
                    sh 'python -m venv venv'
                    sh '. venv/bin/activate && pip install --upgrade pip'
                    
                    // Equivalent to actions/cache (Jenkins has built-in caching)
                    if (fileExists('~/.cache/pip')) {
                        echo 'Using cached pip dependencies'
                    }
                }
            }
        }
        
        stage('Install Dependencies') {
            steps {
                sh '. venv/bin/activate && pip install -r requirements.txt'
            }
        }
        
        stage('Run DVC Pipeline') {
            steps {
                withCredentials([
                    string(credentialsId: 'aws-access-key-id', variable: 'AWS_ACCESS_KEY_ID'),
                    string(credentialsId: 'aws-secret-access-key', variable: 'AWS_SECRET_ACCESS_KEY')
                ]) {
                    sh '''
                        . venv/bin/activate
                        dvc repro
                        dvc push
                    '''
                }
            }
        }
        
    }
    
    post {
        always {
            cleanWs()
        }
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}