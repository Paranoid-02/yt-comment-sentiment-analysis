pipeline {
    agent any
    
    environment {
        AWS_DEFAULT_REGION = 'eu-north-1'
        GITHUB_REPO_URL = 'https://github.com/Paranoid-02/yt-comment-sentiment-analysis.git'
    }
    
    stages {
        stage('Checkout Code') {
            steps {
                script {
                    git branch: 'main', url: "${GITHUB_REPO_URL}"
                }
            }
        }
        
        stage('Setup Python') {
            steps {
                script {
                    // Check for Python installation and install if missing
                    def pythonInstalled = sh(script: 'command -v python3 || command -v python', returnStatus: true) == 0
                    
                    if (!pythonInstalled) {
                        if (isUnix()) {
                            sh 'sudo apt-get update && sudo apt-get install -y python3 python3-venv'
                        } else {
                            bat 'choco install python -y'
                        }
                    }
                    
                    // Create virtual environment
                    sh 'python3 -m venv venv || python -m venv venv'
                }
            }
        }
        
        stage('Install Dependencies') {
            steps {
                sh '. venv/bin/activate && pip install -r requirements.txt'
            }
        }
        
        stage('Run DVC Pipeline') {
            steps {
                withCredentials([
                    string(credentialsId: 'aws-access-key-id', variable: 'AWS_ACCESS_KEY_ID'),
                    string(credentialsId: 'aws-secret-access-key', variable: 'AWS_SECRET_ACCESS_KEY')
                ]) {
                    sh '''
                        . venv/bin/activate
                        dvc repro
                        dvc push
                    '''
                }
            }
        }
        stage('Version Data & Code') {
            steps {
                withCredentials([
                    usernamePassword(
                        credentialsId: 'github-token',
                        usernameVariable: 'Paranoid-02',
                        passwordVariable: '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'
                    )
                ]) {
                    sh '''
                        # Configure Git (important for Jenkins)
                        git config --global user.name "Jenkins Automation"
                        git config --global user.email "jenkins@paranoia.com"
                        
                        # Check if DVC caused any file changes
                        if [ -n "$(git status --porcelain)" ]; then
                            echo "Detected changes in DVC-tracked files"
                            
                            # Add all changes (both code and DVC files)
                            git add .
                            
                            # Commit with a descriptive message
                            git commit -m "[Jenkins] Update data/models (Build ${BUILD_NUMBER})"
                            
                            # Push using token-based authentication
                            git push https://${GIT_USERNAME}:${GIT_TOKEN}@github.com/Paranoid-02/yt-comment-sentiment-analysis.git HEAD:main
                            
                            echo "Successfully pushed changes to GitHub"
                        else
                            echo "No DVC-tracked files changed - skipping commit"
                        fi
                    '''
                }
            }
        }
    }
    
    post {
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}