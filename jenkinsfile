pipeline {
    agent any
    
    environment {
        AWS_DEFAULT_REGION = 'eu-north-1'
        GITHUB_REPO_URL = 'https://github.com/Paranoid-02/yt-comment-sentiment-analysis.git'
    }
    
    stages {
        stage('Checkout Code') {
            steps {
                script {
                    git branch: 'main', url: "${GITHUB_REPO_URL}"
                }
            }
        }
        
        stage('Setup Python') {
            steps {
                script {
                    // Check for Python installation and install if missing
                    def pythonInstalled = sh(script: 'command -v python3 || command -v python', returnStatus: true) == 0
                    
                    if (!pythonInstalled) {
                        if (isUnix()) {
                            sh 'sudo apt-get update && sudo apt-get install -y python3 python3-venv'
                        } else {
                            bat 'choco install python -y'
                        }
                    }
                    
                    // Create virtual environment
                    sh 'python3 -m venv venv || python -m venv venv'
                }
            }
        }
        
        stage('Install Dependencies') {
            steps {
                sh '. venv/bin/activate && pip install -r requirements.txt'
            }
        }
        
        stage('Run DVC Pipeline') {
            steps {
                withCredentials([
                    string(credentialsId: 'aws-access-key-id', variable: 'AWS_ACCESS_KEY_ID'),
                    string(credentialsId: 'aws-secret-access-key', variable: 'AWS_SECRET_ACCESS_KEY')
                ]) {
                    sh '''
                        . venv/bin/activate
                        dvc repro
                        dvc push
                    '''
                }
            }
        }
        
    }
    
    post {
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}