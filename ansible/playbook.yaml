---
- hosts: localhost
  connection: local
  vars:
    image_name: "{{ image_name }}"
    k8s_namespace: "default"
  tasks:
    - name: Debug variables
      debug:
        msg: "Using image: {{ image_name }} in namespace: {{ k8s_namespace }}"
      
    - name: Check if minikube is running
      command: minikube status
      register: minikube_status
      ignore_errors: yes
      changed_when: false
      
    - name: Start minikube if not running
      command: minikube start --driver=docker
      when: minikube_status.rc != 0
      
    - name: Create processed deployment file
      template:
        src: deployment.yaml.j2
        dest: ../kubernetes/deployment-processed.yaml
      
    - name: Create AWS credentials secret
      shell: |
        kubectl create namespace {{ k8s_namespace }} --dry-run=client -o yaml | kubectl apply -f -
        kubectl create secret generic app-secrets \
          --from-literal=aws-access-key="{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}" \
          --from-literal=aws-secret="{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}" \
          --namespace={{ k8s_namespace }} \
          --dry-run=client -o yaml | kubectl apply -f -
      
    - name: Apply Kubernetes resources
      shell: |
        kubectl apply -f ../kubernetes/deployment-processed.yaml -n {{ k8s_namespace }}
        kubectl apply -f ../kubernetes/service.yaml -n {{ k8s_namespace }}
      
    - name: Verify deployment
      shell: |
        kubectl rollout status deployment/yt-comment-deployment -n {{ k8s_namespace }} --timeout=120s
        kubectl get pods -l app=yt-comment-analysis -n {{ k8s_namespace }}