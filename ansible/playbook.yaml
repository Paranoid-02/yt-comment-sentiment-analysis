---
- hosts: localhost
  connection: local
  tasks:
    - name: Check Minikube status
      command: minikube status -o json
      register: minikube_status
      ignore_errors: yes
      changed_when: false

    - name: Parse Minikube status
      set_fact:
        minikube_healthy: "{{ (minikube_status.stdout | from_json).Host == 'Running' 
                              and (minikube_status.stdout | from_json).Kubelet == 'Running'
                              and (minikube_status.stdout | from_json).APIServer == 'Running' }}"
      when: minikube_status.stdout != ""
      ignore_errors: yes

    - name: Start Minikube if not running
      command: minikube start --driver=docker
      when: not minikube_healthy|default(False)

    - name: Ensure namespace exists
      command: kubectl create namespace default --dry-run=client -o yaml | kubectl apply -f -
      changed_when: false

    # Create the AWS credentials secret
    - name: Create AWS credentials secret
      command: >
        kubectl create secret generic app-secrets 
        --namespace=default
        --from-literal=aws-access-key="{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        --from-literal=aws-secret="{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        --dry-run=client -o yaml | kubectl apply -f -
      changed_when: false

    # Apply the deployment using kubectl
    - name: Apply deployment
      command: kubectl apply -f ../kubernetes/deployment.yaml
      register: deploy_result

    # Apply the service using kubectl
    - name: Apply service
      command: kubectl apply -f ../kubernetes/service.yaml
      register: service_result

    - name: Verify deployment
      command: kubectl rollout status deployment/yt-comment-deployment -n default --timeout=120s